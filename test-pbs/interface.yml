---

  - name: HP Comware interface automation
    hosts: hp2
    gather_facts: no
    connection: local

    #State=present
    tasks:
      - name: Change just type to 'routed'
        comware_interface: name=FortyGigE1/0/5 type=routed username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
          - "results.end_state.type == 'routed'"


      - name: Change just type to 'bridged'
        comware_interface: name=FortyGigE1/0/5 type=bridged username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
          - "results.end_state.type == 'bridged'"
          - "results.changed == true"

      - name: 'Basic Ethernet config'
        comware_interface: name=FortyGigE1/0/5 admin=up description=mydesc duplex=auto speed=40000 username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
          - "results.end_state.admin == 'up'"
          - "results.end_state.description == 'mydesc'"
          - "results.end_state.speed == '40000'"
          - "results.end_state.duplex == 'auto'"


      - name: 'Basic Ethernet idempotency'
        comware_interface: name=FortyGigE1/0/5 admin=up description=mydesc duplex=auto speed=40000 username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
          - "results.end_state.admin == 'up'"
          - "results.end_state.description == 'mydesc'"
          - "results.end_state.speed == '40000'"
          - "results.end_state.duplex == 'auto'"
          - "results.changed == false"


      - name: 'Basic Ethernet alternate parameters'
        comware_interface: name=FortyGigE1/0/5 admin=down description=newdesc duplex=full speed=auto username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
          - "results.end_state.admin == 'down'"
          - "results.end_state.speed == 'auto'"
          - "results.end_state.duplex == 'full'"
          - "results.end_state.description == 'newdesc'"
          - "results.changed == true"


      - name: Type param with other params fails
        comware_interface: name=FortyGigE1/0/5 type=bridged admin=up username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results
        ignore_errors: yes

      - assert:
          that:
          - "results.failed == true"


      - name: 'Virtual Interface'
        comware_interface: name=bridge-aggregation36 admin=up description=virtdesc username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
          - "results.end_state.admin == 'up'"
          - "results.end_state.description == 'virtdesc'"


      - name: 'Virtual Interface 2'
        comware_interface: name=LoopBack29 admin=up description=virtdesc username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: 

      - assert:
          that:
          - "results.end_state.admin == 'up'"
          - "results.end_state.description == 'virtdesc'"

      #State=absent
      - name: 'Ethernet gets defaulted'
        comware_interface: state=absent name=FortyGigE1/0/5 username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
          - "results.end_state.description == 'FortyGigE1/0/5 Interface'"


      - name: 'Virtual gets removed'
        comware_interface: state=absent name=bridge-aggregation36 username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
          - "results.end_state == {}"

      #State=defaults
      - name: 'Ethernet gets defaulted'
        comware_interface: state=default name=FortyGigE1/0/5 username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
          - "results.end_state.description == 'FortyGigE1/0/5 Interface'"

      - name: 'Virtual gets defaulted'
        comware_interface: state=default name=Loopback29 username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
          - "results.end_state.description == 'LoopBack29 Interface'"

      #Failures
      - name: Type parameter with other parameters
        comware_interface: name=FortyGigE1/0/5 type=routed speed=10000 username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results
        ignore_errors: true
        tags: fails

      - assert:
          that:
          - "results.failed == true"
        tags: fails

      - name: Invalid iface type
        comware_interface: name=Megabit1/0/5 description=mydesc username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results
        ignore_errors: true
        tags: fails

      - assert:
          that:
          - "results.failed == true"
        tags: fails

      - name: Physical doesn't exist
        comware_interface: name=FortyGigE1/0/999 description=mydesc username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results
        ignore_errors: true
        tags: fails

      - assert:
          that:
          - "results.failed == true"
        tags: fails

      - name: Speed or duplex on logical
        comware_interface: name=bridge-aggregation36 description=mydesc speed=1000 username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results
        ignore_errors: true
        tags: fails

      - assert:
          that:
          - "results.failed == true"
        tags: fails

      - name: Vlan interface of non-existing vlan
        comware_interface: name=Vlan-interface1021 description=mydesc username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results
        ignore_errors: true
        tags: fails

      - assert:
          that:
          - "results.failed == true"
        tags: fails

      - name: Can't create loopback
        comware_interface: name=LoopBack102123434 description=mydesc username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results
        ignore_errors: true
        tags: fails

      - assert:
          that:
          - "results.failed == true"
        tags: fails
