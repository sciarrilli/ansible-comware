---

  - name: HP Comware IP address automation
    hosts: hp2
    gather_facts: no
    connection: local

    #State=present
    tasks:

      - name: ensure layer 3
        comware_interface: name=FortyGigE1/0/3 type=routed username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
          - "results.end_state.type == 'routed'"

      - name: Basic IPv4 config
        comware_ipinterface: name=FortyGigE1/0/3 addr=192.168.3.5 mask=255.255.255.0 username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
          - "results.end_state.addr == '192.168.3.5'"
          - "results.end_state.mask == '255.255.255.0'"

      - name: IPv4 idempotency
        comware_ipinterface: name=FortyGigE1/0/3 addr=192.168.3.5 mask=255.255.255.0 username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
          - "results.end_state.addr == '192.168.3.5'"
          - "results.end_state.mask == '255.255.255.0'"
          - "results.changed == false"

      - name: IPv4 idempotency prefix notation
        comware_ipinterface: name=FortyGigE1/0/3 addr=192.168.3.5 mask=24 username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
          - "results.end_state.addr == '192.168.3.5'"
          - "results.end_state.mask == '255.255.255.0'"
          - "results.changed == false"

      - name: IPv4 change mask
        comware_ipinterface: name=FortyGigE1/0/3 addr=192.168.3.5 mask=28 username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
          - "results.end_state.addr == '192.168.3.5'"
          - "results.end_state.mask == '255.255.255.240'"
          - "results.changed == true"

      - name: Basic IPv6 config
        comware_ipinterface: version=v6 name=FortyGigE1/0/3 addr=2001:DB8::1 mask=10 username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
          - "results.end_state.addr == '2001:DB8::1'"
          - "results.end_state.mask == '10'"

      - name: IPv6 idempotency
        comware_ipinterface: version=v6 name=FortyGigE1/0/3 addr=2001:DB8::1 mask=10 username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
          - "results.end_state.addr == '2001:DB8::1'"
          - "results.end_state.mask == '10'"
          - "results.changed == false"

      - name: IPv6 add another
        comware_ipinterface: version=v6 name=FortyGigE1/0/3 addr=2001:DB8::2 mask=10 username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
          - "results.end_state.addr == '2001:DB8::2'"
          - "results.end_state.mask == '10'"

      # state = absent
      - name: IPv6 remove the first one
        comware_ipinterface: state=absent version=v6 name=FortyGigE1/0/3 addr=2001:DB8::1 mask=10 username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
          - "{} == {{ results.end_state }}"
          - "results.changed == true"

      - name: IPv6 remove the second one
        comware_ipinterface: state=absent version=v6 name=FortyGigE1/0/3 addr=2001:DB8::2 mask=10 username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
          - "{} == {{ results.end_state }}"
          - "results.changed == true"

      - name: IPv4 removal
        comware_ipinterface: state=absent version=v4 name=FortyGigE1/0/3 addr=192.168.3.5 mask=28 username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
          - "{} == {{ results.end_state }}"
          - "results.changed == true"

      #failures
      - name: Invalid IPv4 Address
        comware_ipinterface: version=v4 name=FortyGigE1/0/3 addr=192.168.256.5 mask=28 username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results
        ignore_errors: true
        tags: fails

      - assert:
          that:
          - "results.failed == true"
        tags: fails

      - name: Invalid IPv4 Mask
        comware_ipinterface: version=v4 name=FortyGigE1/0/3 addr=192.168.3.5 mask=33 username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results
        ignore_errors: true
        tags: fails

      - assert:
          that:
          - "results.failed == true"
        tags: fails

      - name: Invalid IPv6 Address
        comware_ipinterface: version=v6 name=FortyGigE1/0/3 addr=g::1 mask=28 username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results
        ignore_errors: true
        tags: fails

      - assert:
          that:
          - "results.failed == true"
        tags: fails

      - name: Invalid IPv6 Mask
        comware_ipinterface: version=v6 name=FortyGigE1/0/3 addr=fe::03 mask=129 username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results
        ignore_errors: true
        tags: fails

      - assert:
          that:
          - "results.failed == true"
        tags: fails

      - name: Setup for bridged test
        comware_interface: name=FortyGigE1/0/5 type=bridged username={{ username }} password={{ password }} hostname={{ inventory_hostname }}


      - name: Interface not in routed mode
        comware_ipinterface: name=FortyGigE1/0/5 addr=192.168.3.5 mask=28 username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results
        ignore_errors: true
        tags: fails

      - assert:
          that:
          - "results.failed == true"
        tags: fails
