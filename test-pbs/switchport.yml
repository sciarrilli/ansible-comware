---

  - name: HP Comware switchport automation
    hosts: hp2
    gather_facts: no
    connection: local

    #State=present
    tasks:

      - name: ensure layer 2
        comware_interface: name=FortyGigE1/0/2 type=bridged username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
          - "results.end_state.type == 'bridged'"

      - name: ensure VLAN 3 exists
        comware_vlan: vlanid=3 name=VLAN3_TEST descr='vlan 3 for testing' state=present username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
            - results.end_state.vlanid == '3'
            - results.end_state.name == 'VLAN3_TEST'
            - results.end_state.descr == 'vlan 3 for testing'

      - name: ensure VLAN 5 exists
        comware_vlan: vlanid=5 name=VLAN5_TEST descr='vlan 5 for testing' state=present username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
            - results.end_state.vlanid == '5'
            - results.end_state.name == 'VLAN5_TEST'
            - results.end_state.descr == 'vlan 5 for testing'

      - name: Basic access config
        comware_switchport: name=FortyGigE1/0/2 link_type=access username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
          - "results.end_state.link_type == 'access'"


      - name: Basic trunk config
        comware_switchport: name=FortyGigE1/0/2 link_type=trunk username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
          - "results.end_state.link_type == 'trunk'"


      - name: Switch to access with pvid
        comware_switchport: name=FortyGigE1/0/2 link_type=access pvid=3 username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
          - "results.end_state.link_type == 'access'"
          - "results.end_state.pvid == '3'"      

      - name: Access Idempotency check
        comware_switchport: name=FortyGigE1/0/2 link_type=access username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
          - "results.end_state.link_type == 'access'"
          - "results.end_state.pvid == '3'"
          - "results.changed == false"

      - name: Access new pvid
        comware_switchport: name=FortyGigE1/0/2 link_type=access pvid=5 username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
          - "results.end_state.link_type == 'access'"
          - "results.end_state.pvid == '5'"

      - name: Trunk with permitted list
        comware_switchport: name=FortyGigE1/0/2 link_type=trunk pvid=5 permitted_vlans='1-5' username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
          - "results.end_state.link_type == 'trunk'"
          - "results.end_state.pvid == '5'"
          - "results.end_state.permitted_vlans == '1-5'"

      - name: Trunk idempotency check
        comware_switchport: name=FortyGigE1/0/2 link_type=trunk pvid=5 username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
          - "results.end_state.link_type == 'trunk'"
          - "results.end_state.pvid == '5'"
          - "results.end_state.permitted_vlans == '1-5'"
          - "results.changed == false"

   # State=default
      - name: Default test
        comware_switchport: state=default name=FortyGigE1/0/2 pvid=3 link_type=trunk username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results

      - assert:
          that:
          - "results.end_state.link_type == 'access'"
          - "results.end_state.pvid == '1'"

    # Failures
      - name: access mixed with permitted_vlans
        comware_switchport: name=FortyGigE1/0/2 pvid=3 link_type=access permitted_vlans=1-5 username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results
        ignore_errors: true
        tags: fails

      - assert:
          that:
          - "results.failed == true"
        tags: fails

      - name: vlan doesn't exists
        comware_switchport: name=FortyGigE1/0/2 pvid=1021 link_type=access username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results
        ignore_errors: true
        tags: fails

      - assert:
          that:
          - "results.failed == true"
        tags: fails

      - name: portchannel setup
        comware_portchannel:
          group: 10
          members:
            - FortyGigE1/0/2
          type: bridged
          mode: static
          min_ports: 2
          max_ports: 6
          username: "{{ username }}"
          password: "{{ password }}"
          hostname: "{{ inventory_hostname }}"
          state: present
        register: data
        tags: fails

      - name: interface is part of portchannel
        comware_switchport: name=FortyGigE1/0/2 pvid=3 link_type=access username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results
        ignore_errors: true
        tags: fails

      - assert:
          that:
          - "results.failed == true"
        tags: fails

      - name: portchannel removal
        comware_portchannel:
          group: 10
          type: bridged
          username: "{{ username }}"
          password: "{{ password }}"
          hostname: "{{ inventory_hostname }}"
          state: absent
        register: data
        tags: fails

      - name: confirm portchannel removal
        assert:
          that:
            - data.changed == true
            - data.end_state == {}
        tags: fails

      - name: Prep for routed test
        comware_interface: name=FortyGigE1/0/2 type=routed username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results
        tags: fails

      - name: interface must be in bridged mode
        comware_switchport: name=FortyGigE1/0/2 pvid=3 link_type=access username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
        register: results
        ignore_errors: true
        tags: fails

      - assert:
          that:
          - "results.failed == true"
        tags: fails
